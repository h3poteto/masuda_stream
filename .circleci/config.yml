version: 2

jobs:
  build:
    docker:
      - image: ghcr.io/h3poteto/elixir-rust-node:1.10.4-rust1.42-node12-slim-buster
    working_directory: /var/opt/app
    steps:
      - checkout
      - restore_cache:
          keys:
            - deps-{{ arch }}-elixir1.8.2-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
            - deps-{{ arch }}-elixir1.8.2-{{ checksum "mix.exs" }}
      - run:
          name: Install dependencies
          command: |
            mix local.hex --force
            mix deps.get
      - run:
          name: Install assets
          working_directory: /var/opt/app/assets
          command: |
            npm install
            npm run deploy
      - run:
          name: Compile
          command: |
            mix local.rebar --force
            mix deps.compile
            mix compile
      - save_cache:
          key: deps-{{ arch }}-elixir1.10.4-{{ checksum "mix.exs" }}-{{ checksum "mix.lock" }}
          paths:
            - /var/opt/app/deps
            - /var/opt/app/_build

  create_image:
    machine: true
    environment:
      DUMMY_SECRET_KEY_BASE: fkHPVsK4U1cDwFTriHvqlLejSzJNcWWsfT3vePQkhj+WD1UasLSdJ1hF3KlAmAZs
    steps:
      - checkout
      - run:
          name: Docker build
          command: |
            docker build --build-arg SECRET_KEY_BASE=$DUMMY_SECRET_KEY_BASE -t $ECR:$CIRCLE_SHA1 -t $ECR:latest .
      - run:
          name: Docker push
          command: |
            $(aws ecr get-login --no-include-email --region ap-northeast-1)
            docker push $ECR:latest
            docker push $ECR:$CIRCLE_SHA1


  create_pull_request:
    docker:
      - image: circleci/golang:1.15-buster
    steps:
      - run:
          name: Install_hub
          command: |
            curl -sSLf https://github.com/github/hub/releases/download/v2.14.2/hub-linux-amd64-2.14.2.tgz | \
            tar zxf - --strip-components=1 -C /tmp/ && \
            sudo mv /tmp/bin/hub /usr/local/bin/hub
            hub --version
      - run:
          name: Update_tag_and_create_pr
          command: |
            git config --global user.name ${GITHUB_NAME}
            git config --global user.email ${GITHUB_EMAIL}
            git clone https://${GITHUB_NAME}:${GITHUB_TOKEN}@github.com/h3poteto/k8s-services.git
            cd k8s-services
            git init
            git checkout -b update-masudastream-image-${CIRCLE_SHA1}
            sed -i -e "s/\(564677439943\.dkr\.ecr\.ap-northeast-1\.amazonaws\.com\/h3poteto\/masudastream:\)[0-9a-z]\+.*$/\1$CIRCLE_SHA1/g" external-prd/masudastream/deployment.yaml
            git add .
            git commit -m "Update docker image for masudastream to ${CIRCLE_SHA1}"
            git push --set-upstream origin update-masudastream-image-${CIRCLE_SHA1}
            hub pull-request -m "[Image update] masudastream ${CIRCLE_SHA1}"

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - create_image:
          filters:
            branches:
              only:
                - master
          requires:
            - build
      - create_pull_request:
          filters:
            branches:
              only:
                - master
          requires:
            - create_image
